install.packages("caret")
install.packages("rpart")
install.packages("tree")
install.packages("randomForest")
install.packages("e1071")
install.packages("ggplot2")
setwd("~/Documents/GitHub/datasci_course_materials/assignment5")
data<-read.csv("seaflow_21min.csv")
summary(data)
str(data)
l=72343
l=72343
train=sample(l,l/2)
mean(data[train,]$time)
set.seed(1)
set.seed(1)
l=72343
train=sample(l,l/2)
mean(data[train,]$time)
require(ggpplot2)
require(ggplot2)
training=data[train,]
attach(training)
ggplot(pe,chl_small)
who
str(training$pe)
str(training$chl_small)
names(training)
qplot(pe, chl_small, data = training, color=pop)
fol<-formula(response~fsc_small + fsc_perp + fsc_big + pe + chl_big + chl_small)
model <- rpart(fol, method="class", data=training)
requires(rpart)
require(rpart)
model <- rpart(fol, method="class", data=training)
fol<-formula(pop~fsc_small + fsc_perp + fsc_big + pe + chl_big + chl_small)
model <- rpart(fol, method="class", data=training)
print(model)
test=data[-train,]
result=predict(model,test)
str(result)
names(result)
log=(result==test$pop)
sum(log)
str(test$pop)
result=predict(model,test,type="class")
log=(result==test$pop)
sum(log)
sum(log)/length(log)
library(randomforest)
library(randomForest)
model1 <- randomForest(fol, data=training)
result1=predict(model1,test,type="class")
log1=(result1==test$pop)
acc=sum(log1)/length(log1)
acc
library(e1071)
model2 <- svm(fol, data=training)
importance(model2)
importance(model2)
importance(model1)
result2=predict(model2,test,type="class")
log2=(result2==test$pop)
acc=sum(log2)/length(log2)
acc
table(pred = log, true = testingdata$pop)
table(pred = log, true = test$pop)
table(pred = log1, true = test$pop)
table(pred = log2, true = test$pop)
table(pred = result, true = test$pop)
table(pred = result1, true = test$pop)
table(pred = result2, true = test$pop)
summary(test)
par(mfrow=c(3,2))
for i in 6:11{
hist(test[,i])
}
for(i in 6:11){
hist(test[,i])
}
par(mfrow=c(3,2))
for(i in 6:11){
hist(test[,i])
}
for(i in 6:11){
hist(test[,i])
}
names(test)
attach(data)
gplot(time,chl_big)
qplot(time,chl_big)
plot(time,chl_big)
filter=data[file_id!=208,]
str(filter)
l=60348
train=sample(l,l/2)
training=filter[train,]
test=filter[-train,]
library(e1071)
model2 <- svm(fol, data=training)
result2=predict(model2,test,type="class")
log2=(result2==test$pop)
acc=sum(log2)/length(log2)
acc
0.9726917-0.9212927
print(model)
table(pred = result2, true = test$pop)
plot(filter$time,filter$chl_big)
qplot(filter$time,filter$chl_big)
plot(time,chl_big)
qplot(time,chl_big)
attach(data)
qplot(chl_big,time)
qplot(chl_big,time,color=pop)
